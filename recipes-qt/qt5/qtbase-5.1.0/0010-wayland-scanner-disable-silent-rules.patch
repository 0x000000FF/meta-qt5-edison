From c441038a17c1173c8abafd451c4083b2eccc54ab Mon Sep 17 00:00:00 2001
From: Martin Jansa <Martin.Jansa@gmail.com>
Date: Sun, 5 May 2013 11:18:34 +0200
Subject: [PATCH 10/23] wayland-scanner: disable silent rules

* for some reason "$$qtwayland-server-header.commands" on second line gets expanded as -server-header.commands

Upstream-Status: Pending

Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
---
 mkspecs/features/wayland-scanner.prf | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/mkspecs/features/wayland-scanner.prf b/mkspecs/features/wayland-scanner.prf
index 2ec064f..847d0f7 100644
--- a/mkspecs/features/wayland-scanner.prf
+++ b/mkspecs/features/wayland-scanner.prf
@@ -10,7 +10,7 @@ wayland-server-header.input = WAYLANDSERVERSOURCES
 wayland-server-header.variable_out = HEADERS
 wayland-server-header.output = wayland-${QMAKE_FILE_BASE}-server-protocol$${first(QMAKE_EXT_H)}
 wayland-server-header.commands = $$QMAKE_WAYLAND_SCANNER server-header < ${QMAKE_FILE_IN} > ${QMAKE_FILE_OUT}
-silent:wayland-server-header.commands = @echo Wayland server header ${QMAKE_FILE_IN} && $$wayland-server-header.commands
+#silent:wayland-server-header.commands = @echo Wayland server header ${QMAKE_FILE_IN} && $$wayland-server-header.commands
 QMAKE_EXTRA_COMPILERS += wayland-server-header
 
 wayland-client-header.name = wayland ${QMAKE_FILE_BASE}
@@ -18,7 +18,7 @@ wayland-client-header.input = WAYLANDCLIENTSOURCES
 wayland-client-header.variable_out = HEADERS
 wayland-client-header.output = wayland-${QMAKE_FILE_BASE}-client-protocol$${first(QMAKE_EXT_H)}
 wayland-client-header.commands = $$QMAKE_WAYLAND_SCANNER client-header < ${QMAKE_FILE_IN} > ${QMAKE_FILE_OUT}
-silent:wayland-client-header.commands = @echo Wayland client header ${QMAKE_FILE_IN} && $$wayland-client-header.commands
+#silent:wayland-client-header.commands = @echo Wayland client header ${QMAKE_FILE_IN} && $$wayland-client-header.commands
 QMAKE_EXTRA_COMPILERS += wayland-client-header
 
 wayland-code.name = wayland ${QMAKE_FILE_BASE}
@@ -26,7 +26,7 @@ wayland-code.input = WAYLANDCLIENTSOURCES WAYLANDSERVERSOURCES
 wayland-code.variable_out = SOURCES
 wayland-code.output = wayland-${QMAKE_FILE_BASE}-protocol.c
 wayland-code.commands = $$QMAKE_WAYLAND_SCANNER code < ${QMAKE_FILE_IN} > ${QMAKE_FILE_OUT}
-silent:wayland-code.commands = @echo Wayland code header ${QMAKE_FILE_IN} && $$wayland-code.commands
+#silent:wayland-code.commands = @echo Wayland code header ${QMAKE_FILE_IN} && $$wayland-code.commands
 QMAKE_EXTRA_COMPILERS += wayland-code
 
 qtPrepareTool(QMAKE_QTWAYLANDSCANNER, qtwaylandscanner)
@@ -37,7 +37,7 @@ qtwayland-client-header.variable_out = HEADERS
 qtwayland-client-header.depends = wayland-${QMAKE_FILE_BASE}-client-protocol$${first(QMAKE_EXT_H)}
 qtwayland-client-header.output = qwayland-${QMAKE_FILE_BASE}$${first(QMAKE_EXT_H)}
 qtwayland-client-header.commands = $$QMAKE_QTWAYLANDSCANNER client-header ${QMAKE_FILE_IN} > ${QMAKE_FILE_OUT}
-silent:qtwayland-client-header.commands = @echo QtWayland client header ${QMAKE_FILE_IN} && $$qtwayland-client-header.commands
+#silent:qtwayland-client-header.commands = @echo QtWayland client header ${QMAKE_FILE_IN} && $$qtwayland-client-header.commands
 QMAKE_EXTRA_COMPILERS += qtwayland-client-header
 
 qtwayland-client-code.name = qtwayland ${QMAKE_FILE_BASE}
@@ -46,7 +46,7 @@ qtwayland-client-code.variable_out = SOURCES
 qtwayland-client-code.depends = qwayland-${QMAKE_FILE_BASE}$${first(QMAKE_EXT_H)}
 qtwayland-client-code.output = qwayland-${QMAKE_FILE_BASE}.cpp
 qtwayland-client-code.commands = $$QMAKE_QTWAYLANDSCANNER client-code ${QMAKE_FILE_IN} > ${QMAKE_FILE_OUT}
-silent:qtwayland-client-code.commands = @echo QtWayland client code ${QMAKE_FILE_IN} && $$qtwayland-client-code.commands
+#silent:qtwayland-client-code.commands = @echo QtWayland client code ${QMAKE_FILE_IN} && $$qtwayland-client-code.commands
 QMAKE_EXTRA_COMPILERS += qtwayland-client-code
 
 qtwayland-server-header.name = qtwayland ${QMAKE_FILE_BASE}
@@ -55,7 +55,7 @@ qtwayland-server-header.variable_out = HEADERS
 qtwayland-server-header.depends = wayland-${QMAKE_FILE_BASE}-server-protocol$${first(QMAKE_EXT_H)}
 qtwayland-server-header.output = qwayland-server-${QMAKE_FILE_BASE}$${first(QMAKE_EXT_H)}
 qtwayland-server-header.commands = $$QMAKE_QTWAYLANDSCANNER server-header ${QMAKE_FILE_IN} > ${QMAKE_FILE_OUT}
-silent:qtwayland-server-header.commands = @echo QtWayland server header ${QMAKE_FILE_IN} && $$qtwayland-server-header.commands
+#silent:qtwayland-server-header.commands = @echo QtWayland server header ${QMAKE_FILE_IN} && $$qtwayland-server-header.commands
 QMAKE_EXTRA_COMPILERS += qtwayland-server-header
 
 qtwayland-server-code.name = qtwayland ${QMAKE_FILE_BASE}
@@ -64,5 +64,5 @@ qtwayland-server-code.variable_out = SOURCES
 qtwayland-server-code.depends = qwayland-server-${QMAKE_FILE_BASE}$${first(QMAKE_EXT_H)}
 qtwayland-server-code.output = qwayland-server-${QMAKE_FILE_BASE}.cpp
 qtwayland-server-code.commands = $$QMAKE_QTWAYLANDSCANNER server-code ${QMAKE_FILE_IN} > ${QMAKE_FILE_OUT}
-silent:qtwayland-server-code.commands = @echo QtWayland server code ${QMAKE_FILE_IN} && $$qtwayland-server-code.commands
+#silent:qtwayland-server-code.commands = @echo QtWayland server code ${QMAKE_FILE_IN} && $$qtwayland-server-code.commands
 QMAKE_EXTRA_COMPILERS += qtwayland-server-code
-- 
1.8.3.2

